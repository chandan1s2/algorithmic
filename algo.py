# -*- coding: utf-8 -*-
"""finsearch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17dgElIZSyjXVSJnzEQHKlXyFdcL5BvGL
"""

!pip install yfinance
!pip install matplotlib pandas_datareader

import datetime as dt
import matplotlib.pyplot as plt
import pandas_datareader as web
import yfinance as yf

plt.style.use("dark_background")

# moving avg. = avg price of last 30 days, 100 days
ma_1 = 30
ma_2 = 100

# RSI period (usually set to 14 days)
rsi_period = 14

# defining the time frame (3 years)
start = dt.datetime.now() - dt.timedelta(days=365*3)
end = dt.datetime.now()

# dono moving average assign karna-
data = yf.download('TSLA', start=start, end=end)
data[f'SMA_{ma_1}'] = data['Adj Close'].rolling(window=ma_1).mean()
data[f'SMA_{ma_2}'] = data['Adj Close'].rolling(window=ma_2).mean()

# Calculate RSI (The indication)
delta = data['Adj Close'].diff(1)
gain = delta.where(delta > 0, 0)
loss = -delta.where(delta < 0, 0)
avg_gain = gain.rolling(window=rsi_period).mean()
avg_loss = loss.rolling(window=rsi_period).mean()
rs = avg_gain / avg_loss
data['RSI'] = 100 - (100 / (1 + rs))

data = data.iloc[ma_2 + rsi_period:]  # Skipping the initial rows where moving averages and RSI are not calculated yet
plt.plot(data['Adj Close'], label="Share Price", color="lightgray")
plt.plot(data[f'SMA_{ma_1}'], label=f"SMA_{ma_1}", color="orange")
plt.plot(data[f'SMA_{ma_2}'], label=f"SMA_{ma_2}", color="purple")
plt.legend(loc="upper left")
plt.show()

# Our strategy
buy_signals = []
sell_signals = []
trigger = 0

for x in range(len(data)):
    # Entry: close > 200 EMA and RSI > 70
    if data['Adj Close'].iloc[x] > data[f'SMA_{ma_2}'].iloc[x] and data['RSI'].iloc[x] > 70 and trigger != 1:
        buy_signals.append(data['Adj Close'].iloc[x])
        sell_signals.append(float('nan'))
        trigger = 1
    # Exit: close < 200 EMA
    elif data['Adj Close'].iloc[x] < data[f'SMA_{ma_2}'].iloc[x] and trigger != -1:
        buy_signals.append(float('nan'))
        sell_signals.append(data['Adj Close'].iloc[x])
        trigger = -1
    else:
        buy_signals.append(float('nan'))
        sell_signals.append(float('nan'))

# defining
data['Buy Signals'] = buy_signals
data['Sell Signals'] = sell_signals

#data print karna -
print(data)

# plot ka appearance set karna-
plt.plot(data['Adj Close'], label="Share Price", alpha=0.5)
plt.plot(data[f'SMA_{ma_1}'], label=f"SMA_{ma_1}", color="orange", linestyle="--")
plt.plot(data[f'SMA_{ma_2}'], label=f"SMA_{ma_2}", color="pink", linestyle="--")
plt.scatter(data.index, data['Buy Signals'], label="Buy Signal", marker="^", color="#00ff00", lw=1)
plt.scatter(data.index, data['Sell Signals'], label="Sell Signal", marker="v", color="#ff0000", lw=1)
plt.legend(loc="lower left")
plt.show()

